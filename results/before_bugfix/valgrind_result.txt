siddharth@siddharth:~/ENPM808X/valgrind/cpp-boilerplate/build$ valgrind app/shell-app 
==13409== Memcheck, a memory error detector
==13409== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13409== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==13409== Command: app/shell-app
==13409== 
Averaged sensor reading: 10
==13409== Conditional jump or move depends on uninitialised value(s)
==13409==    at 0x109D68: main (main.cpp:9)
==13409== 
==13409== 
==13409== HEAP SUMMARY:
==13409==     in use at exit: 44 bytes in 2 blocks
==13409==   total heap usage: 4 allocs, 2 frees, 73,772 bytes allocated
==13409== 
==13409== LEAK SUMMARY:
==13409==    definitely lost: 24 bytes in 1 blocks
==13409==    indirectly lost: 20 bytes in 1 blocks
==13409==      possibly lost: 0 bytes in 0 blocks
==13409==    still reachable: 0 bytes in 0 blocks
==13409==         suppressed: 0 bytes in 0 blocks
==13409== Rerun with --leak-check=full to see details of leaked memory
==13409== 
==13409== For counts of detected and suppressed errors, rerun with: -v
==13409== Use --track-origins=yes to see where uninitialised values come from
==13409== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)


siddharth@siddharth:~/ENPM808X/valgrind/cpp-boilerplate/build$ valgrind --tool=helgrind app/shell-app 
==13620== Helgrind, a thread error detector
==13620== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==13620== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==13620== Command: app/shell-app
==13620== 
Averaged sensor reading: 10
==13620== 
==13620== For counts of detected and suppressed errors, rerun with: -v
==13620== Use --history-level=approx or =none to gain increased speed, at
==13620== the cost of reduced accuracy of conflicting-access information
==13620== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



siddharth@siddharth:~/ENPM808X/valgrind/cpp-boilerplate/build$ valgrind --leak-check=full app/shell-app 
==13634== Memcheck, a memory error detector
==13634== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13634== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==13634== Command: app/shell-app
==13634== 
Averaged sensor reading: 10
==13634== Conditional jump or move depends on uninitialised value(s)
==13634==    at 0x109D68: main (main.cpp:9)
==13634== 
==13634== 
==13634== HEAP SUMMARY:
==13634==     in use at exit: 44 bytes in 2 blocks
==13634==   total heap usage: 4 allocs, 2 frees, 73,772 bytes allocated
==13634== 
==13634== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 2
==13634==    at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13634==    by 0x109EA2: AnalogSensor::Read() (AnalogSensor.cpp:16)
==13634==    by 0x109D44: main (main.cpp:7)
==13634== 
==13634== LEAK SUMMARY:
==13634==    definitely lost: 24 bytes in 1 blocks
==13634==    indirectly lost: 20 bytes in 1 blocks
==13634==      possibly lost: 0 bytes in 0 blocks
==13634==    still reachable: 0 bytes in 0 blocks
==13634==         suppressed: 0 bytes in 0 blocks
==13634== 
==13634== For counts of detected and suppressed errors, rerun with: -v
==13634== Use --track-origins=yes to see where uninitialised values come from
==13634== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)





